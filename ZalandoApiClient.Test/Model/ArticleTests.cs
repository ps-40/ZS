/* 
 * Zalando Shop API
 *
 * The shop API empowers developers to build amazing new apps or websites using Zalando shop data and services.
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ZalandoApiClient.Api;
using ZalandoApiClient.Model;
using ZalandoApiClient.Client;
using System.Reflection;

namespace ZalandoApiClient.Test
{
    /// <summary>
    ///  Class for testing Article
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ArticleTests
    {
        // TODO uncomment below to declare an instance variable for Article
        //private Article instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Article
            //instance = new Article();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Article
        /// </summary>
        [Test]
        public void ArticleInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Article
            //Assert.IsInstanceOfType<Article> (instance, "variable 'instance' is a Article");
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'ModelId'
        /// </summary>
        [Test]
        public void ModelIdTest()
        {
            // TODO unit test for the property 'ModelId'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'ShopUrl'
        /// </summary>
        [Test]
        public void ShopUrlTest()
        {
            // TODO unit test for the property 'ShopUrl'
        }
        /// <summary>
        /// Test the property 'Color'
        /// </summary>
        [Test]
        public void ColorTest()
        {
            // TODO unit test for the property 'Color'
        }
        /// <summary>
        /// Test the property 'Available'
        /// </summary>
        [Test]
        public void AvailableTest()
        {
            // TODO unit test for the property 'Available'
        }
        /// <summary>
        /// Test the property 'Season'
        /// </summary>
        [Test]
        public void SeasonTest()
        {
            // TODO unit test for the property 'Season'
        }
        /// <summary>
        /// Test the property 'SeasonYear'
        /// </summary>
        [Test]
        public void SeasonYearTest()
        {
            // TODO unit test for the property 'SeasonYear'
        }
        /// <summary>
        /// Test the property 'ActivationDate'
        /// </summary>
        [Test]
        public void ActivationDateTest()
        {
            // TODO unit test for the property 'ActivationDate'
        }
        /// <summary>
        /// Test the property 'AdditionalInfos'
        /// </summary>
        [Test]
        public void AdditionalInfosTest()
        {
            // TODO unit test for the property 'AdditionalInfos'
        }
        /// <summary>
        /// Test the property 'Genders'
        /// </summary>
        [Test]
        public void GendersTest()
        {
            // TODO unit test for the property 'Genders'
        }
        /// <summary>
        /// Test the property 'AgeGroups'
        /// </summary>
        [Test]
        public void AgeGroupsTest()
        {
            // TODO unit test for the property 'AgeGroups'
        }
        /// <summary>
        /// Test the property 'Brand'
        /// </summary>
        [Test]
        public void BrandTest()
        {
            // TODO unit test for the property 'Brand'
        }
        /// <summary>
        /// Test the property 'CategoryKeys'
        /// </summary>
        [Test]
        public void CategoryKeysTest()
        {
            // TODO unit test for the property 'CategoryKeys'
        }
        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Test]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }
        /// <summary>
        /// Test the property 'Units'
        /// </summary>
        [Test]
        public void UnitsTest()
        {
            // TODO unit test for the property 'Units'
        }
        /// <summary>
        /// Test the property 'Tags'
        /// </summary>
        [Test]
        public void TagsTest()
        {
            // TODO unit test for the property 'Tags'
        }
        /// <summary>
        /// Test the property 'Media'
        /// </summary>
        [Test]
        public void MediaTest()
        {
            // TODO unit test for the property 'Media'
        }

    }

}
